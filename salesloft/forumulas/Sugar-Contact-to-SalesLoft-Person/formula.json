{
    "active": true,
    "configuration": [
        {
            "key": "crmsource",
            "name": "crmsource",
            "required": true,
            "type": "elementInstance"
        },
        {
            "key": "destination",
            "name": "Destination",
            "required": true,
            "type": "elementInstance"
        }
    ],
    "debugLoggingEnabled": false,
    "debugLoggingExpires": "2020-07-02T21:08:52Z",
    "description": "",
    "engine": "v3",
    "id": 37350,
    "name": "Sugar Contact to SalesLoft Person",
    "singleThreaded": false,
    "steps": [
        {
            "name": "eventContactOrLead",
            "onFailure": [
                "GracefulExit"
            ],
            "onSuccess": [
                "getSugarRecord"
            ],
            "properties": {
                "mimeType": "application/javascript",
                "scriptEngine": "v2"
            },
            "type": "filter"
        },
        {
            "name": "getSugarRecord",
            "onFailure": [],
            "onSuccess": [
                "exitIfNotFound"
            ],
            "properties": {
                "api": "/sugar-contacts/${trigger.event.objectId}",
                "elementInstanceId": "${config.crmsource}",
                "method": "GET",
                "path": ""
            },
            "type": "elementRequest"
        },
        {
            "name": "exitIfNotFound",
            "onFailure": [
                "GracefulExit"
            ],
            "onSuccess": [
                "buildQueryForPerson"
            ],
            "properties": {},
            "type": "filter"
        },
        {
            "name": "buildQueryForPerson",
            "onFailure": [],
            "onSuccess": [
                "checkIfPersonExists"
            ],
            "properties": {
                "mimeType": "application/javascript",
                "scriptEngine": "v2"
            },
            "type": "script"
        },
        {
            "name": "checkIfPersonExists",
            "onFailure": [],
            "onSuccess": [
                "doesRecordExist"
            ],
            "properties": {
                "acceptableStatusCodes": "",
                "api": "/sl-person",
                "elementInstanceId": "${config.destination}",
                "method": "GET",
                "query": "steps.CreatePayloadTocheckIfPersonExists.query"
            },
            "type": "elementRequest"
        },
        {
            "name": "doesRecordExist",
            "onFailure": [
                "CreateCustomerInDestination"
            ],
            "onSuccess": [
                "UpdateCustomerInDestination"
            ],
            "properties": {
                "mimeType": "application/javascript",
                "scriptEngine": "v2"
            },
            "type": "filter"
        },
        {
            "name": "UpdateCustomerInDestination",
            "onFailure": [],
            "onSuccess": [],
            "properties": {
                "api": "/sl-person/{id}",
                "body": "${steps.getSugarRecord.response.body}",
                "elementInstanceId": "${config.destination}",
                "method": "PATCH",
                "path": "${steps.checkIfPersonExists.response.body[0]}"
            },
            "type": "elementRequest"
        },
        {
            "name": "CreateCustomerInDestination",
            "onFailure": [],
            "onSuccess": [],
            "properties": {
                "api": "/sl-person",
                "body": "${steps.getSugarRecord.response.body}",
                "elementInstanceId": "${config.destination}",
                "method": "POST"
            },
            "type": "elementRequest"
        },
        {
            "name": "GracefulExit",
            "onFailure": [],
            "onSuccess": [],
            "properties": {
                "mimeType": "application/javascript",
                "scriptEngine": "v3"
            },
            "type": "filter"
        }
    ],
    "triggers": [
        {
            "async": true,
            "name": "trigger",
            "onFailure": [],
            "onSuccess": [
                "eventContactOrLead"
            ],
            "properties": {
                "elementInstanceId": "${config.crmsource}"
            },
            "type": "event"
        }
    ]
}